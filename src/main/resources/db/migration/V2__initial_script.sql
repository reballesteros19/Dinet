CREATE TABLE persona(
    id uuid DEFAULT gen_random_uuid(),
    apellido varchar(255),
    nombre varchar(255),
    telefono varchar(255),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS SUPPLIERS (
    ID SERIAL PRIMARY KEY,
    BUSINESS_NAME VARCHAR(255) NOT NULL,
    COMMERCIAL_NAME VARCHAR(255) UNIQUE NOT NULL,
    RUC VARCHAR(15),
    TYPE_ID INT,
    PHONE VARCHAR(20),
    FAX VARCHAR(20),
    ADDRESS VARCHAR(255),
    GEO_UBIGEO VARCHAR(10),
    GEO_DISTRICT VARCHAR(255),
    GEO_PROVINCE VARCHAR(255),
    GEO_COUNTRY VARCHAR(255),
    COVERAGE VARCHAR(255),
    HOMOLOGATION BOOLEAN,
    HOMOLOGATION_CODE VARCHAR(255),
    CLASIFICATION_ID INT,
    COURIER VARCHAR(255),
    IMAGE VARCHAR(255), --Que tipo de dato es?
    HAS_INTERFACE BOOLEAN,
    SECTOR VARCHAR(255),
    HAS_ADDITIONAL_SER BOOLEAN,
    HAS_TRANSP_SER BOOLEAN,
    STATUS VARCHAR(255),
    STATUS_OBSERVATION VARCHAR(255),
    CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATION_USER VARCHAR(255),
    UPDATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_USER VARCHAR(255),
    DISABLE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DISABLE_USER VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS ACCOUNTS_TYPES (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) UNIQUE NOT NULL,
    DESCRIPTION VARCHAR(3000)
);

CREATE TABLE IF NOT EXISTS ACCOUNTS (
    ID SERIAL PRIMARY KEY,
    BUSINESS_NAME VARCHAR(255) NOT NULL,
    COMMERCIAL_NAME VARCHAR(255) UNIQUE,
    RUC VARCHAR(15) NOT NULL,
    TYPE_ID INT,
    PHONE VARCHAR(20),
    FAX VARCHAR(20),
    ADDRESS VARCHAR(255),
    GEO_UBIGEO VARCHAR(10),
    GEO_DISTRICT VARCHAR(255),
    GEO_PROVINCE VARCHAR(255),
    GEO_COUNTRY VARCHAR(255),
    PRIORITY INT,
    IMAGE VARCHAR(255), --Que tipo de dato es?
    STATUS VARCHAR(255),
    STATUS_OBSERVATION VARCHAR(255),
    CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATION_USER VARCHAR(255),
    UPDATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_USER VARCHAR(255),
    DISABLE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DISABLE_USER VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS ACCOUNT_CONTACTS (
    ID SERIAL PRIMARY KEY,
    NAME1 VARCHAR(255) NOT NULL,
    NAME2 VARCHAR(255),
    LASTNAME1 VARCHAR(255) NOT NULL,
    LASTNAME2 VARCHAR(255),
    EMAIL VARCHAR(255),
    PHONE VARCHAR(20),
    CELLPHONE VARCHAR(20),
    FAX VARCHAR(20),
    ADDRESS VARCHAR(255),
    COUNTRY VARCHAR(255),
    CITY VARCHAR(255),
    POSTAL_CODE VARCHAR(20),
    GENDER VARCHAR(10),
    ACCOUNT_ID INT,
    ROLE VARCHAR(255),
    STATUS VARCHAR(255),
    STATUS_OBSERVATION VARCHAR(255),
    REGISTRATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    REGISTRATION_USER VARCHAR(255),
    UPDATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_USER VARCHAR(255),
    DISABLE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DISABLE_USER VARCHAR(255),
    FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNTS(ID)
);

CREATE TABLE IF NOT EXISTS IDENTIFICATIONS_TYPES (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) UNIQUE NOT NULL,
    DESCRIPTION VARCHAR(3000)
);

CREATE TABLE IF NOT EXISTS USERS (
    ID SERIAL PRIMARY KEY,
    IDENTIFICATION_TYPE_ID INT,
    IDENTIFICATION VARCHAR(255) UNIQUE,
    NAME1 VARCHAR(255) NOT NULL,
    NAME2 VARCHAR(255),
    LASTNAME1 VARCHAR(255) NOT NULL,
    LASTNAME2 VARCHAR(255),
    EMAIL VARCHAR(255) UNIQUE,
    PASSWORD VARCHAR(255) NOT NULL,
    ADDRESS VARCHAR(255),
    ROLE_ID INT,
    GEO_CITY VARCHAR(255),
    GEO_COUNTRY VARCHAR(255),
    CELLPHONE VARCHAR(20),
    PHONE VARCHAR(20),
    STATUS VARCHAR(255),
    STATUS_OBSERVATION VARCHAR(255),
    REGISTRATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    REGISTRATION_USER VARCHAR(255),
    UPDATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_USER VARCHAR(255),
    DISABLE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DISABLE_USER VARCHAR(255),
    FOREIGN KEY (IDENTIFICATION_TYPE_ID) REFERENCES IDENTIFICATIONS_TYPES(ID)
);

CREATE TABLE IF NOT EXISTS ROLES (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) UNIQUE NOT NULL,
    DESCRIPTION VARCHAR(3000),
    STATUS VARCHAR(255),
    STATUS_OBSERVATION VARCHAR(255),
    REGISTRATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    REGISTRATION_USER VARCHAR(255),
    UPDATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_USER VARCHAR(255),
    DISABLE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DISABLE_USER VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS FUNCTIONS (
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(255) UNIQUE NOT NULL,
    DESCRIPTION VARCHAR(3000),
    URI VARCHAR(255),
    STATUS VARCHAR(255),
    STATUS_OBSERVATION VARCHAR(255),
    REGISTRATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    REGISTRATION_USER VARCHAR(255),
    UPDATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_USER VARCHAR(255),
    DISABLE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DISABLE_USER VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS ROLES_FUNCTIONS (
    ID SERIAL PRIMARY KEY,
    ROLE_ID INT,
    FUNCTIONS_ID INT,
    ACTIONS VARCHAR(255),
    STATUS VARCHAR(255),
    STATUS_OBSERVATION VARCHAR(255),
    REGISTRATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    REGISTRATION_USER VARCHAR(255),
    UPDATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_USER VARCHAR(255),
    DISABLE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DISABLE_USER VARCHAR(255),
    FOREIGN KEY (ROLE_ID) REFERENCES ROLES(ID),
    FOREIGN KEY (FUNCTIONS_ID) REFERENCES FUNCTIONS(ID)
);

CREATE TABLE IF NOT EXISTS SUPPLIERS_TYPES (
    ID SERIAL PRIMARY KEY,
    CODE VARCHAR(255) UNIQUE NOT NULL,
    NAME VARCHAR(255) UNIQUE NOT NULL,
    DESCRIPTION VARCHAR(3000)
);

CREATE TABLE IF NOT EXISTS SUPPLIERS_CLASIFICATIONS (
    ID SERIAL PRIMARY KEY,
    CODE VARCHAR(255) UNIQUE NOT NULL,
    NAME VARCHAR(255) UNIQUE NOT NULL,
    DESCRIPTION VARCHAR(3000)
);

CREATE TABLE IF NOT EXISTS SUPPLIERS_CONTACTS (
    ID SERIAL PRIMARY KEY,
    NAME1 VARCHAR(255) NOT NULL,
    NAME2 VARCHAR(255),
    LASTNAME1 VARCHAR(255) NOT NULL,
    LASTNAME2 VARCHAR(255),
    EMAIL VARCHAR(255),
    PHONE VARCHAR(20),
    CELLPHONE VARCHAR(20),
    FAX VARCHAR(20),
    ADDRESS VARCHAR(255),
    COUNTRY VARCHAR(255),
    CITY VARCHAR(255),
    POSTAL_CODE VARCHAR(20),
    GENDER VARCHAR(10),
    SUPPLIER_ID INT,
    ROLE VARCHAR(255),
    STATUS VARCHAR(255),
    STATUS_OBSERVATION VARCHAR(255),
    REGISTRATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    REGISTRATION_USER VARCHAR(255),
    UPDATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_USER VARCHAR(255),
    DISABLE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DISABLE_USER VARCHAR(255),
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS(ID)
);

CREATE TABLE IF NOT EXISTS ACCOUNTS_USERS (
    ID SERIAL PRIMARY KEY,
    ACCOUNT_ID INT,
    USER_ID INT,
    STATUS VARCHAR(255),
    STATUS_OBSERVATION VARCHAR(255),
    REGISTRATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    REGISTRATION_USER VARCHAR(255),
    UPDATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_USER VARCHAR(255),
    DISABLE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DISABLE_USER VARCHAR(255),
    FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNTS(ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

CREATE TABLE IF NOT EXISTS SUPPLIERS_USERS (
    ID SERIAL PRIMARY KEY,
    SUPPLIER_ID INT,
    USER_ID INT,
    STATUS VARCHAR(255),
    STATUS_OBSERVATION VARCHAR(255),
    REGISTRATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    REGISTRATION_USER VARCHAR(255),
    UPDATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_USER VARCHAR(255),
    DISABLE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DISABLE_USER VARCHAR(255),
    FOREIGN KEY (SUPPLIER_ID) REFERENCES SUPPLIERS(ID),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

CREATE TABLE IF NOT EXISTS CONSUMERS (
    ID SERIAL PRIMARY KEY,
    IDENTIFICATION VARCHAR(255) UNIQUE,
    FULL_NAME VARCHAR(255) NOT NULL,
    ACCOUNT_ID INT,
    EMAIL VARCHAR(255),
    ADDRESS VARCHAR(255),
    GEO_UBIGEO VARCHAR(10),
    GEO_PROVINCE VARCHAR(255),
    GEO_DISTRICT VARCHAR(255),
    GEO_COUNTRY VARCHAR(255),
    CELLPHONE VARCHAR(20),
    PHONE VARCHAR(20),
    STATUS VARCHAR(255),
    STATUS_OBSERVATION VARCHAR(255),
    REGISTRATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    REGISTRATION_USER VARCHAR(255),
    UPDATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_USER VARCHAR(255),
    DISABLE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DISABLE_USER VARCHAR(255),
    FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNTS(ID)
);

CREATE TABLE IF NOT EXISTS BRANDS (
    ID SERIAL PRIMARY KEY,
    ACCOUNT_ID INT,
    NAME VARCHAR(255) UNIQUE,
    DESCRIPTION VARCHAR(3000),
    STATUS VARCHAR(255),
    STATUS_OBSERVATION VARCHAR(255),
    REGISTRATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    REGISTRATION_USER VARCHAR(255),
    UPDATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_USER VARCHAR(255),
    DISABLE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DISABLE_USER VARCHAR(255),
    FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNTS(ID)
);

CREATE TABLE IF NOT EXISTS STORES (
    ID SERIAL PRIMARY KEY,
    BRAND_ID INT,
    NAME VARCHAR(255) UNIQUE,
    DESCRIPTION VARCHAR(3000),
    ADDRESS VARCHAR(255),
    PHONE VARCHAR(20),
    EMAIL VARCHAR(255),
    TYPE VARCHAR(255),
    COORDINATES VARCHAR(255),
    STATUS VARCHAR(255),
    STATUS_OBSERVATION VARCHAR(255),
    REGISTRATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    REGISTRATION_USER VARCHAR(255),
    UPDATE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATE_USER VARCHAR(255),
    DISABLE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    DISABLE_USER VARCHAR(255),
    FOREIGN KEY (BRAND_ID) REFERENCES BRANDS(ID)
);